// <auto-generated />
using System;
using DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace SolucionInmobiliaria.Database.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240320162637_AgregamosTablaRoles")]
    partial class AgregamosTablaRoles
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("RolUsuario", b =>
                {
                    b.Property<Guid>("RolesUsuarioId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UsuariosId")
                        .HasColumnType("TEXT");

                    b.HasKey("RolesUsuarioId", "UsuariosId");

                    b.HasIndex("UsuariosId");

                    b.ToTable("RolUsuario");
                });

            modelBuilder.Entity("SolucionInmobiliaria.Domain.Producto", b =>
                {
                    b.Property<string>("CodigoAlfanumero")
                        .HasColumnType("TEXT");

                    b.Property<string>("Barrio")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<int>("Estado")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<string>("UrlImagen")
                        .HasColumnType("TEXT");

                    b.HasKey("CodigoAlfanumero");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            CodigoAlfanumero = "A1",
                            Barrio = "Palermo",
                            Descripcion = "Departamento de 2 ambientes",
                            Estado = 0,
                            Price = 100000.0,
                            UrlImagen = "https://www.google.com"
                        },
                        new
                        {
                            CodigoAlfanumero = "A2",
                            Barrio = "Recoleta",
                            Descripcion = "Departamento de 3 ambientes",
                            Estado = 0,
                            Price = 150000.0,
                            UrlImagen = "https://www.google.com"
                        });
                });

            modelBuilder.Entity("SolucionInmobiliaria.Domain.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Estado")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaDesde")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaHasta")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IdClienteAsociado")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IdVendedorAsociado")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductoReservadoCodigoAlfanumero")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProductoReservadoCodigoAlfanumero");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("SolucionInmobiliaria.Domain.Rol", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("SolucionInmobiliaria.Domain.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("RolUsuario", b =>
                {
                    b.HasOne("SolucionInmobiliaria.Domain.Rol", null)
                        .WithMany()
                        .HasForeignKey("RolesUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SolucionInmobiliaria.Domain.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SolucionInmobiliaria.Domain.Reserva", b =>
                {
                    b.HasOne("SolucionInmobiliaria.Domain.Producto", "ProductoReservado")
                        .WithMany()
                        .HasForeignKey("ProductoReservadoCodigoAlfanumero");

                    b.Navigation("ProductoReservado");
                });
#pragma warning restore 612, 618
        }
    }
}
